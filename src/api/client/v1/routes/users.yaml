/users:
  get:
    summary: Search and list users.
    description: |
      Get paginated user listing.

      #### Allowed Scopes
      **admin**
    tags:
    - Users
    parameters:
    - $ref: '#/parameters/paginationOffset'
    - $ref: '#/parameters/paginationLimit'
    responses:
      200:
        description: The list of users was successfully retrieved.
        schema:
          $ref: '#/definitions/UserList'
      400:
        description: Request validation failed.
      401:
        description: The users could not be listed due to failed authorization.
      403:
        description: Insufficient access rights to list users.
  post:
    summary: Create a new user
    description: |
      Create a new user.

      #### Allowed Scopes
      **admin**
    tags:
      - Users
    parameters:
      - name: body
        in: body
        required: true
        schema:
          title: UserCreation
          type: object
          additionalProperties: false
          properties:
            id:
              description: Custom Id
              type: string
              pattern: ^[\w-]+$
            properties:
              description: A map of custom properties.
              type: object
              additionalProperties: true
    responses:
      201:
        description: User was created successfully.
        schema:
          $ref: '#/definitions/User'
      400:
        description: |
          Request validation failed or the user could not be created since a user with the same id already exists.
          Error codes are: **UserAlreadyExists**.
        schema:
          allOf:
            - $ref: '#/definitions/RequestError'
            - example:
                code: UserAlreadyExists
                message: A user with the same id already exists.
      401:
        description: The user could not be created due to failed authorization.
      403:
        description: Insufficient access rights to create a user.
